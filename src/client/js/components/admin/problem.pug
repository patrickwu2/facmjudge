.ui.text.container( v-if="problem" )
  .ui.segments
    .ui.segment
      h2.ui.header Problem \#{{problem._id}} : {{problem.name}}
    .ui.segment
      a.ui.button.spaced( 
          v-link="{ name: 'problem', params: {id: problem._id}}" )
        | Problem Page
      a.ui.button.spaced( 
          v-link="{ name: 'admin.submissions', query: {probID: problem._id}}" )
        | Submissions
      button.primary.right.labeled.icon.ui.button.spaced( 
        @click.prevent="updateOnly" type="button" ) 
        i.refresh.icon
        | Refresh from meta.json
      button.ui.right.labeled.icon.red.button.spaced( 
        @click.prevent="rejudgeProblem" )
        i.refresh.icon
        | Rejudge All

    .ui.segment
      h2.ui.header Problem settings
    .ui.segment.clear-after
      h3.ui.dividing.header Directly upload tar.gz
      iframe#dummyframe(width="0" height="0" border="0" style="display: none;" name="dummyframe")
      form.ui.form( action="/admin/newProblem" method="POST" 
          enctype="multipart/form-data" target="dummyframe" @submit.prevent="updateProblem" )
        label.ui.icon.button( for="problem-file" )
          i.file.icon
          | Open File
        input#problem-file(type="file" v-model="filename" name="problem-file" )
        span.filename-text {{ filename | getPath }}
        button.primary.right.floated.right.labeled.icon.ui.button(type="submit") 
          i.right.arrow.icon
          | Submit

    .ui.segment
      h3.ui.dividing.header Settings
      form.ui.form
        .three.fields
          .twelve.wide.field
            label Name
            input(type="text" v-model="problem.name") 
          .four.wide.field
            label TimeLimit
            input(type="text" v-model="problem.timeLimit") 
          .four.wide.field
            label Problem number
            input(type="text" v-model="problem.num") 
        .three.fields
          .field
            .ui.toggle.checkbox
              input(type="checkbox" v-model="problem.visible")
              label Visible to non-admin
          .field
            .ui.toggle.checkbox
              input(type="checkbox" v-model="problem.notGitOnly")
              label Allow submit without git
          .field
            .ui.toggle.checkbox
              input(type="checkbox" v-model="problem.showStatistic")
              label Show statistic
              

    .ui.segment.clear-after
      h3.ui.dividing.header Test Groups
      h4.ui.dividing.header Total
      form.ui.form
        .two.fields
          .four.wide.field
            label Count
            input(type="number" readonly :value="totalTestsCount") 
          .twelve.wide.field
            label Points
            input(type="number" readonly :value="totalPoints") 

      .ui.segments
        .ui.segment( v-for="(idx, group) of problem.testdata.groups" )
          h4.ui.header Group {{ '#'+idx }}
          form.ui.form
            .field
              label Tests
              select.ui.fluid.dropdown( v-model="group.tests", value="test", multiple )
                option( v-for="tests of problem.testFiles" ) {{ tests }}
            .two.fields
              .four.wide.field
                label Count
                input(type="number" readonly :value="group.tests.length") 
              .eight.wide.field
                label Points
                input(type="number", v-model="group.points" number) 
              .four.wide.field(style="position: relative; height: 60px;")
                | &nbsp;
                button.ui.right.labeled.icon.red.button.spaced.stick-left-bottom( 
                  @click.prevent="deleteGroup(idx)")
                  i.remove.icon
                  | Delete
        .ui.attached.bottom.segment
          button.ui.right.labeled.icon.green.button.spaced( @click="addNewGroup" )
            i.plus.icon
            | Add new groups

    .ui.segment.clear-after
      h3.ui.dividing.header Problem Statement
      .ui.top.attached.tabular.menu#problem-statement-tab
        a.item.active( data-tab="markdown" ) markdown
        a.item( data-tab="preview" ) preview
      .ui.bottom.attached.tab.segment.active( data-tab="markdown" )
        #editor.no-mathjax
        //-form.ui.form
          textarea( v-model="problem.desc" row="20" style="font-family: monospace;" )
      .ui.bottom.attached.tab.segment( data-tab="preview" )
        .mathjax( v-html="problem.desc | marked" )
      button.ui.primary.right.floated.primary.right.labeled.icon.button( @click.prevent="updateProblemSettings" )
        i.right.arrow.icon
        | Submit
